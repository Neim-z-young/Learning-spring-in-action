
plugins {
  id "org.hidetake.ssh" version "2.10.1"
}

apply plugin: 'eclipse'
apply plugin: 'war'
apply plugin: 'eclipse-wtp'

sourceCompatibility = 1.11
targetCompatibility = 1.11

remotes {
  webServer {
    host = '123.207.230.153'
    user = 'ubuntu'
    identity = file('C:\\Users\\13408\\.ssh\\oyoungy')
  }
}

dependencies {
  compile "org.springframework:spring-webmvc:$springVersion"
  compile "org.springframework:spring-jdbc:$springVersion"
  compile "org.springframework.security:spring-security-config:$springSecurityVersion"
  compile "org.springframework.security:spring-security-web:$springSecurityVersion"
  compile "com.h2database:h2:$h2Version"
  compile "org.hibernate:hibernate-validator:$hibernateValidatorVersion"
  compile "org.apache.commons:commons-lang3:$commonsLangVersion"
  compile "org.thymeleaf:thymeleaf-spring4:$thymeleafVersion"
  compile "org.thymeleaf.extras:thymeleaf-extras-springsecurity3:2.1.1.RELEASE"
  compile "org.springframework.ldap:spring-ldap-core:2.0.1.RELEASE"

  //javaee api
  compile "javax.xml.bind:jaxb-api:$jaxbVersion"
  compile "com.sun.xml.bind:jaxb-core:$jaxbVersion"
  compile "com.sun.xml.bind:jaxb-impl:$jaxbVersion"
  compile "javax.activation:activation:$activationVersion"

  providedCompile "javax.servlet:javax.servlet-api:$servletApiVersion"

  testCompile "junit:junit-dep:$junitVersion"
  testCompile "org.springframework:spring-test:$springVersion"
  testCompile "org.mockito:mockito-core:$mockitoVersion"
  testCompile "org.hamcrest:hamcrest-library:$hamcrestVersion"
}

repositories {
  maven { url 'http://maven.springframework.org/release' }
  maven { url 'http://maven.springframework.org/milestone' }
  maven { url 'http://maven.springframework.org/snapshot' }
  maven { url 'http://download.java.net/maven/2' }
  mavenCentral()
}

wrapper {
  gradleVersion = '5.4'
}

//task wrapper(type: Wrapper) {
//  gradleVersion = '1.8'
//}

war {
  baseName = 'spittr'
}

eclipse {
  wtp {
    component {
      contextPath = 'spittr'
    }
  }
}

task deploy {
  doLast {
    ssh.run {
      session(remotes.webServer) {
        println 'Copy war package...'+buildDir.toString() + '/libs/spittr.war'
        put from: buildDir.toString() + '/libs/spittr.war', into: '/usr/local/apache-tomcat9/webapps'
        //execute 'sudo service tomcat restart'
        println 'Copied'
      }
    }
  }
}

task chmod {
  doLast {
    ssh.run {
      session(remotes.webServer) {
        println 'chmod to 755...'
        execute 'sudo chmod -R 755 /usr/local/apache-tomcat9/webapps/spittr'
        println 'changed successed'
      }
    }
  }
}

task startTomcat {
  doLast {
    ssh.run {
      session(remotes.webServer) {
        println 'starting...'
        execute 'sudo sh /usr/local/apache-tomcat9/bin/startup.sh'
        println 'started'
      }
    }
  }
}

task shutdownTomcat {
  doLast {
    ssh.run {
      session(remotes.webServer) {
        println 'stopping...'
        execute 'sudo sh /usr/local/apache-tomcat9/bin/shutdown.sh'
        println 'stopped'
      }
    }
  }
}
